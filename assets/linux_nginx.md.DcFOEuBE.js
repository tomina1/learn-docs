import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.Dy0uLohy.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"linux/nginx.md","filePath":"linux/nginx.md","lastUpdated":1717662822000}'),l={name:"linux/nginx.md"},t=n(`<h2 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h2><p>正则表达式：~ 开头， Perl 语言 PCRE 正则兼容。定义变量 <code>?\\&lt;name&gt;</code>、<code>?&#39;name&#39;</code>、<code>?P\\&lt;name&gt;</code>，使用 <code>$name</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 设置会话缓存，避免 ssl 多次握手产生 CPU 消耗。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      ssl_session_cache shared:SSL:10m;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      ssl_session_timeout 10m;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      upstream loadBalancing {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 默认负载均衡</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            least_conn;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 最小连接数</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ip_hash;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 会话持久化，根据 ip 来保证连接的一致性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 尝试连接次数，和标记宕机时长s</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            max_fails  5;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            fail_timeout  10;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            server 1.example.com weight=3;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 权重</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            server 2.example.com;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      server {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        listen				80 ssl;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 单个接口附加 SSL 证书</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        listen				8080 default_server;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 找不到时默认，无则首个 service</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        server_name			o.text.com *.text.com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    					o.text.* ~^(?&lt;user&gt;.+);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 优先级 高 -&gt; 低</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ssl 配置</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ssl_certificate			www.example.com.crt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ssl_certificate_key		www.example.com.key;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ssl_ciphers         HIGH:!aNULL:!MD5;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 保持 ssl 会话</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        keepalive_timeout 60;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      server {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            listen 192.168.1.1:80;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            server_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 重写条件，规则，简单重定向</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            RewriteCond  %{HTTP_HOST}  !www.example.com</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            RewriteRule  (.*)          http://www.example.com$1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return 301 http://www.exmple.o$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # WebSocket 代理，结合 Upgrade 和 CONNECT 来客户端传递到代理服务，Connection 值取决于 Upgrade</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      map $http_upgrade $connection_upgrade {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      		default upgrade;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      		&quot;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		close;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      server {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      		proxy_pass http://backend;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      		proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      		proxy_set_header Connection $connection_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	absolute_redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 访问时代理，则重定向到目标端口，导致被拒，关闭则以当前路径为基准重定向。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	error_page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">404 /404.html | 404 =200 /empty.gif | @fallback命名location;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 状态返回，或改写状态，或重新指向.HSLI</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	etag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 启用、禁用静态资源的 ETag. HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	if_modified_since</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">off | exact | before;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如何比较请求头中的时间。忽略、==、&lt;= HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	log_not_found</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on| off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 未找到文件 记录日志。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	log_subrequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on| off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 子请求 记录日志。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	port_in_redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定 nginx 发出的绝对重定向中的端口。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	underscores_inheaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 为 off 时禁用下划线请求。HS</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># root + path 组成新的路径 .HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不管路径，直接指向目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 日志</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	access_log  logs/access.log.gz combined  gzip=4 buffer=2m flush=30m;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    error_log logs/error.log error;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 提供最大请求时内保持活动。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	keepalive_requests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">100;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	keepalive_timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">75s;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	keepalive_disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">none | browser [msie6|safari|none];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 打开文件描述，目录存在信息，查找文件错误等缓存。HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	open_file_cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">off | max=num最大数 [inactive=time时间内缓存];</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	open_file_cache_valid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:    </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">30s;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	open_file_cache_min_uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	open_file_cache_errors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#扩展名映射响应的 MIME 类型，不区分大小写.HSL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# conf/mime.types 完整示例</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	default_type application/octet-stream</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 默认全为一种类型</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	types</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		text/html html;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		image/gif gif;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		image/jpeg jpg;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# autoindex_module。以斜杠结尾的请求生产一个目标列表.HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	autoindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	autoindex_exact_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输出确切的文件大小</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	autoindex_format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">html | xml | json | jsonp;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 默认或空为 json</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	autoindex_localtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 时间是否使用本地时区或 UTC 输出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# gunzip_module. 对于不支持 gzip编码的客户端解压缩 Content-Encoding:gzip 的响应。HSL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 需要配置 --with-http_gunzip_module 启用</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gunzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gunzip_buffers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">32 4k|16 8k;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 支持 .gz 压缩文件，对其余 gzip 配置有影响.HSL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 需要配置 --with-http_gzip_static_module 启用</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off | always;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 自动对文件 gzip，会有服务器压力，内置变量 $gzip_ratio .HSL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # HSLI</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gunzip_buffers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">32 4k|16 8k;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_comp_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1-9;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">reg;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 禁止任何匹配 User-Agent 自动响应</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_min_length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">20;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 压缩响应最小长度，由 Content-Length 确定</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_proxied</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">off | expired | no-cache | no-store | private | no_last_midified | no_etag | auth |any;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #是否压缩</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_types</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">text/html;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 特殊值 *，对 text/html 响应始终压缩</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	gzip_vary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指令 gzip、gzip_static、gunzip 处于激活，启用/禁用 插入 Vary:Accept-Encoding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# headers_module，将 Expires 和 Cache-Control 字段以及任意字段添加到响应头中.HSLI</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	add_header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-- | name value [always];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 未定义时继承上级，always 时都添加</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	add_trailer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # $status= 200、201、206、301、302、303、307 或 308 时，将制定的字段添加到响应的末尾</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	expires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">time | epoch 对于绝对时间 | max | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #modified修改跟当前之和，默认time跟当前时间之和。 epoch 对于绝对时间，秒。max 将设置为 10年</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# image_filter_module 是 JPEG、GIF、PNG 和 WebP 格式图像的过滤器。HSL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 配置 --with-http_image_filter_module，使用了 libgd 库</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">off | test | size | rotate [90|180|270];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 关闭、确认格式，415、图片信息。L</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# resize 一大一小，以小为基准等比例缩放</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">resize|crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">width height;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 结合选择在 之后/之前 执行，可传一个按比例缩小。L</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter_buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1M;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 读取图片缓冲区的最大大小</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter_interlace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 启用逐行扫描。JPEG一直</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter_jpeg_quality</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">75;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 图片质量.需要变化之后才能压缩</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter_webp_quality</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">80;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image_filter_transparency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | off;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 调色板指定颜色转换 GIF | PNG 时 保留透明度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 限制速率。HSLI</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	if($slow){</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		set $limit_rate 4k;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	map string $variable {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 根据string入参，创建新变量。H</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		default 0;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.example.net </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;~opera Mini&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	server {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 提供 server 配置</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		try_files $url /imgs/default.gif =404;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #  .SL</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		stub_status;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建简单的网页，返回 nginx 服务器状态 .SL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		location ([ =精准 | ~正则 | ~*不区分大小写正则 | ^~不检查正则 ] url) | @name {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # SL</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">			internal;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 只能内部请求，其余 404</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">			empty_gif;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 发送单像素透明 GIF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	} </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="流-stream" tabindex="-1">流 Stream <a class="header-anchor" href="#流-stream" aria-label="Permalink to &quot;流 Stream&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">stream {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 定义变量，年月日。不能支持 buffer 参数的流使用变量</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	map $time_iso8601 $logdate {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		default &#39;date-not-found&#39;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;~^(?&lt;ymd&gt;\\d{4}-\\d{2}-\\d{2})&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $ymd;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 用于记录通过流式代理的链接和数据传输</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	log_format basic [escape=default|json|none] &#39;$remote_addr [$time_local] &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;IP:$protocol $protocol $status $bytes_sent $bytes_received &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;$session_time &quot;$upstream_addr&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;&quot;$upstream_bytes_sent&quot; &quot;$upstream_bytes_received&quot; &quot;$upstream_connect_time&quot;&#39;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	server {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# HSLI</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		access_log /spool/logs/nginx-access-$logdate.log.gz basic gzip=1-9 buffer=32k flush=5m if=$status = 200;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="nginsscript-在-http-和-strem-中实现-location-和-变量处理-支持-es6" tabindex="-1">nginsScript：在 http 和 strem 中实现 location 和 变量处理，支持 ES6 <a class="header-anchor" href="#nginsscript-在-http-和-strem-中实现-location-和-变量处理-支持-es6" aria-label="Permalink to &quot;nginsScript：在 http 和 strem 中实现 location 和 变量处理，支持 ES6&quot;">​</a></h2><ul><li>不支持 let 和 const 声明</li><li>args 数组，eval、JSON、Error 对象函数</li><li>各种定时器、进制写法</li></ul><h2 id="内置变量" tabindex="-1">内置变量 <a class="header-anchor" href="#内置变量" aria-label="Permalink to &quot;内置变量&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 常用基础</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$document_uri=$url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 规范化的请求 url</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$arg_(name)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ? 后面的参数，arg_name=arg_value 的 arg_name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$args=$query_string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求中的参数值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$cookie_(name)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对应名称的 cookie</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$msec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 当前时间，毫秒</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$time_iso8601/$time_local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 本地时间 ISO-8601标准/通用日志格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 完整原始请求行</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$request_[id/method/time/url]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求 id，16位/方法/处理时间/url</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$remote_[addr|port|user]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端 地址/接口/用户名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求主机名 -&gt; Host请求字段主机名 -&gt; 请求匹配的服务器名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主机名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 响应</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$server_[addr/name/port]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 响应服务的 地址/名/接口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 响应状态</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$connection[_requests]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求 序列号/请求数量</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$content_length/$content_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求头字段</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$document_root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 当前请求的文档根目录或别名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$http_(name)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 读取请求头字段, - 变成 _ ,大写变小写</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on | &quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 是否 SSL 模式运行</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$is_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ? </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> &quot;&quot; # 是否有参数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$limit_rate</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置可以响应速率限制</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$realpath_root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 绝对路径，解析完 root、alias</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求模式，http/https</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1.08</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$http_user_agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端代理信息</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$request_body_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发往后端的本地文件名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">$request_filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求的文件路径名</span></span></code></pre></div>`,11),p=[t];function h(k,e,r,E,d,g){return a(),i("div",null,p)}const F=s(l,[["render",h]]);export{c as __pageData,F as default};
