import{_ as e,c as t,o as a,a3 as s}from"./chunks/framework.Dy0uLohy.js";const g=JSON.parse('{"title":"fast-glob","description":"","frontmatter":{},"headers":[],"relativePath":"node-perimeter/fast-glob.md","filePath":"node-perimeter/fast-glob.md","lastUpdated":1717662822000}'),o={name:"node-perimeter/fast-glob.md"},l=s('<h1 id="fast-glob" tabindex="-1">fast-glob <a class="header-anchor" href="#fast-glob" aria-label="Permalink to &quot;fast-glob&quot;">​</a></h1><p><strong>是更快的 fast-glob 替代方案</strong></p><p>异步 fg(str[]).then() fs.async(str[]).then()</p><p>同步 fg.sync(str[]).then()</p><p>流 stream = fg.stream(str[]) stream.on(&#39;data&#39; | &#39;error&#39; | &#39;end&#39;, fn)</p><p>根据提供的模式，返回一组任务 fg.generateTasks(patterns, { base: 基础路径 dynamic：包含动、静模式 patterns: str[] 所有内容 positive: str[] 肯定内容 negative：不含 ! 的否定内容 })</p><h2 id="options" tabindex="-1">OPTIONS <a class="header-anchor" href="#options" aria-label="Permalink to &quot;OPTIONS&quot;">​</a></h2><ul><li>cwd：process.cwd()</li><li>deep: num | bool</li><li>ignore: string[]</li><li>dot: false 是否允许点开头的文件</li><li>stats: false 附加路径和深度，不是统计</li><li>onlyFiles/onlyDirectories: true 仅文件/目录</li><li>unique: 防止重复结果</li><li>markDirectories: 在目录条目中添加 /</li><li>absolute: false 绝对路径</li><li>case、nocase：不区分大小写</li><li>matchBase：允许不带斜线的glob模式根据其基名称匹配文件路径</li><li>transform： fn 允许在接收前进行转换</li></ul>',8),r=[l];function i(n,c,p,d,f,_){return a(),t("div",null,r)}const h=e(o,[["render",i]]);export{g as __pageData,h as default};
